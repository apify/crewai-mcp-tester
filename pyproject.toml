[project]
name = "crewai-mcp-tester"
version = "0.1.0"
description = "CrewAI MCP Tester"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "apify>=2.7.2",
    "crewai>=0.157.0",
    "crewai-tools[mcp]>=0.60.0",
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "ruff>=0.12.11",
]


[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in {filename}
    "BLE001",  # Do not catch blind exception
    "C901",    # `{name}` is too complex
    "COM812",  # This rule may cause conflicts when used with the formatter
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in `__init__`
    "EM",      # flake8-errmsg
    "G004",    # Logging statement uses f-string
    "ISC001",  # This rule may cause conflicts when used with the formatter
    "FIX",     # flake8-fixme
    "PGH003",  # Use specific rule codes when ignoring type issues
    "PLR0911", # Too many return statements
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PTH",     # flake8-use-pathlib
    "PYI034",  # `__aenter__` methods in classes like `{name}` usually return `self` at runtime
    "PYI036",  # The second argument in `__aexit__` should be annotated with `object` or `BaseException | None`
    "S102",    # Use of `exec` detected
    "S105",    # Possible hardcoded password assigned to
    "S106",    # Possible hardcoded password assigned to argument: "{name}"
    "S301",    # `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
    "S303",    # Use of insecure MD2, MD4, MD5, or SHA1 hash function
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "TD002",   # Missing author in TODO; try: `# TODO(<author_name>): ...` or `# TODO @<author_name>: ...
    "TID252",  # Prefer absolute imports over relative imports from parent modules
    "TRY003",  # Avoid specifying long messages outside the exception class
    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    #
    "D",
]
[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]
"**/{scripts}/*" = ["D", "INP001", "PLR2004", "T20"]
"**/{tests}/*" = ["D", "INP001", "PLR2004", "S101", "SLF001", "T20", "TRY301"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
files = ["scripts", "src", "tests"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.mypy-sortedcollections]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[[tool.mypy.overrides]]
module = "crewai.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "crewai_tools.*"
ignore_missing_imports = true
